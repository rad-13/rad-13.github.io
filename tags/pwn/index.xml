<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pwn on R13</title><link>https://rad-13.github.io/tags/pwn/</link><description>Recent content in Pwn on R13</description><generator>Hugo -- gohugo.io</generator><language>it-it</language><lastBuildDate>Sat, 09 Mar 2019 18:54:01 +0100</lastBuildDate><atom:link href="https://rad-13.github.io/tags/pwn/index.xml" rel="self" type="application/rss+xml"/><item><title>Aeroctf CTF - Navigation System</title><link>https://rad-13.github.io/posts/navigation-system/</link><pubDate>Sat, 09 Mar 2019 18:54:01 +0100</pubDate><guid>https://rad-13.github.io/posts/navigation-system/</guid><description>Navigation System è la prima sfida della sezione pwning della Aero CTF.
L&amp;rsquo;idea di questo writeup non è prettamente quello di spiegare nel dettaglio le falle presenti nella sfida, ma piuttosto valutare come il software Ghidra performa in un contesto come le CTF, e confrontarlo al classico radare2.
Per una spiegazione più approfondita di come ho sfruttato le vulnerabilità del binario al fine di ottenere la flag si può fare riferimento alla seguente sfida, abbastanza analoga.</description></item><item><title>FireShell CTF - casino</title><link>https://rad-13.github.io/posts/casino/</link><pubDate>Mon, 28 Jan 2019 19:56:33 +0100</pubDate><guid>https://rad-13.github.io/posts/casino/</guid><description>casino è la seconda sfida proposta nella sezione pwning della FireShell CTF. Non è una sfida molto complessa, ma per via della sua originalità e delle tecniche richieste diverse dai soliti buffer overflow ho deciso d&amp;rsquo;inserirla tra i post.
La sfida presenta un solo eseguibile, un ELF64. Download
Analizzando il programma con rabin2 possiamo dare un&amp;rsquo;occhiata alle caratteristiche principali dell&amp;rsquo;eseguibile.
arch x86 baddr 0x400000 binsz 11297 bintype elf bits 64 canary true sanitiz false class ELF64 crypto false endian little havecode true intrp /lib64/ld-linux-x86-64.</description></item><item><title>CSAW 2018 - get_it</title><link>https://rad-13.github.io/posts/get_it/</link><pubDate>Tue, 27 Nov 2018 20:18:33 +0100</pubDate><guid>https://rad-13.github.io/posts/get_it/</guid><description>get_it è la prima sfida offerta nella categoria pwning delle per la CSAW 2018 (qualificazioni).
Il binario fornito è un ELF64. Download
Appena scaricato possiamo analizzarlo utilizzano rabin2, un tool molto utile al fine di ottenere informazioni su un binario. Passando il parametro -I (binary info) otteniamo il seguente output:
arch x86 baddr 0x400000 binsz 6754 bintype elf bits 64 canary false sanitiz false class ELF64 crypto false endian little havecode true intrp /lib64/ld-linux-x86-64.</description></item></channel></rss>